{"version":3,"sources":["../../src/calc.ts","../../../src/camera/camera.ts","../../../src/camera/silly.ts","../../../src/camera/space.ts","../../../src/camera/index.ts","../../../src/camera/perspective.ts","../../../src/camera/cover-2d.ts","../../../src/converter/string.ts","../../../src/webgl/program.ts","../../../src/painter/painter.ts","../../../../src/painter/background/background.ts","../../../src/webgl/color.ts","../../../src/painter/clear.ts","../../../../src/painter/sprites/virtual-sprite.ts","../../../../src/painter/sprites/quad.ts","../../../../src/painter/sprites/sprite.ts","../../../../src/painter/sprites/sprites.ts","../../flat-land-gl/lib/painter/sprites/sprites.vert","../../flat-land-gl/lib/painter/sprites/sprites.frag","../../../../src/painter/voronoi/voronoi.ts","../../../src/painter/index.ts","../../flat-land-gl/lib/painter/voronoi/voronoi.frag","../../flat-land-gl/lib/painter/voronoi/voronoi.vert","../../src/atlas.ts","../../src/pointer.ts","../../src/scene.ts","../../../src/webgl/resize.ts","../../src/index.ts","util.ts","logic/level.ts","data/level/index.ts","data/level/introduction.ts","App/App.tsx","serviceWorker.ts","index.tsx","gfx/atlas-level.png"],"names":["output","_this","far","result","f","len","Xx","Xy","Xz","Tx","Ty","Tz","prg","t","isNaN","value","defaultValue","Program","item","gl","nameGL","v","this","nameJS","Object","scene","colors","defineProperty","data","SpritesPainter","sprite","Atlas","canvas","Scene","rnd","min","max","Math","floor","random","rndVector2D","angle","PI","cos","sin","Level","dataLevel","painter","rows","cols","length","reduce","prv","cur","createFixedSprites","row","col","x","y","z","forEachCell","type","WALL","addWallSprite","model","Util","getIsometricCoords","width","height","originX","originY","u0","u1","v0","v1","scale","createSprite","action","line","charAt","name","Introduction","App","refCanvas1","React","createRef","state","current","FlatLand","createAtlasAsync","image","LevelAtlas","atlas","console","log","camera","Camera","Cover2D","size","Painter","Sprites","level","Levels","colV","rowV","onAnimation","time","coords","use","start","className","ref","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.facf9985.chunk.js","sourcesContent":["// tslint:disable:no-bitwise\nimport { __read } from \"tslib\";\nvar FULL_TURN = 4096;\nvar MODULO = FULL_TURN - 1;\nvar HALF_TURN = 2048;\nvar COS = new Float32Array(FULL_TURN);\nvar SIN = new Float32Array(FULL_TURN);\n// Prepare acceleration table for COS and SIN.\nfor (var i = 0; i < FULL_TURN; i++) {\n    var angle = (Math.PI * i) / HALF_TURN;\n    COS[i] = Math.cos(angle);\n    SIN[i] = Math.sin(angle);\n}\n/**\n * Fast cosine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction cos(angle) {\n    return COS[(angle | 0) & MODULO];\n}\n/**\n * Fast sine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction sin(angle) {\n    return SIN[(angle | 0) & MODULO];\n}\n/**\n * Force a number to stay between two bounds.\n */\nfunction clamp(v, min, max) {\n    if (min === void 0) { min = 0; }\n    if (max === void 0) { max = 1; }\n    if (v < min)\n        return min;\n    if (v > max)\n        return max;\n    return v;\n}\nvar M4_00 = 0;\nvar M4_10 = 1;\nvar M4_20 = 2;\nvar M4_30 = 3;\nvar M4_01 = 4;\nvar M4_11 = 5;\nvar M4_21 = 6;\nvar M4_31 = 7;\nvar M4_02 = 8;\nvar M4_12 = 9;\nvar M4_22 = 10;\nvar M4_32 = 11;\nvar M4_03 = 12;\nvar M4_13 = 13;\nvar M4_23 = 14;\nvar M4_33 = 15;\nvar M3_00 = 0;\nvar M3_10 = 1;\nvar M3_20 = 2;\nvar M3_01 = 3;\nvar M3_11 = 4;\nvar M3_21 = 5;\nvar M3_02 = 6;\nvar M3_12 = 7;\nvar M3_22 = 8;\nvar vector = {\n    /**\n     * @return Length of a 3D vector.\n     */\n    length3: function (input) {\n        var _a = __read(input, 3), x = _a[0], y = _a[1], z = _a[2];\n        return Math.sqrt(x * x + y * y + z * z);\n    },\n    /**\n     * Create a 3D vector with length 1.\n     */\n    normalize3: function (input, output) {\n        var len = vector.length3(input);\n        output[0] = input[0] * len;\n        output[1] = input[1] * len;\n        output[2] = input[2] * len;\n    },\n    /**\n     * @return Length of a 3D vector.\n     */\n    length4: function (input) {\n        var _a = __read(input, 4), x = _a[0], y = _a[1], z = _a[2], w = _a[3];\n        return Math.sqrt(x * x + y * y + z * z + w * w);\n    },\n    /**\n     * Create a 3D vector with length 1.\n     */\n    normalize4: function (input, output) {\n        var len = vector.length4(input);\n        output[0] = input[0] * len;\n        output[1] = input[1] * len;\n        output[2] = input[2] * len;\n        output[3] = input[3] * len;\n    }\n};\nvar matrix = {\n    identity3: function (output) {\n        output[M3_00] = 1;\n        output[M3_10] = 0;\n        output[M3_20] = 0;\n        output[M3_01] = 0;\n        output[M3_11] = 1;\n        output[M3_21] = 0;\n        output[M3_02] = 0;\n        output[M3_12] = 0;\n        output[M3_22] = 1;\n    },\n    multiply3: function (a, b, output) {\n        output[M3_00] = a[M3_00] * b[M3_00] + a[M3_01] * b[M3_10] + a[M3_02] * b[M3_20];\n        output[M3_10] = a[M3_10] * b[M3_00] + a[M3_11] * b[M3_10] + a[M3_12] * b[M3_20];\n        output[M3_20] = a[M3_20] * b[M3_00] + a[M3_21] * b[M3_10] + a[M3_22] * b[M3_20];\n        output[M3_01] = a[M3_00] * b[M3_01] + a[M3_01] * b[M3_11] + a[M3_02] * b[M3_21];\n        output[M3_11] = a[M3_10] * b[M3_01] + a[M3_11] * b[M3_11] + a[M3_12] * b[M3_21];\n        output[M3_21] = a[M3_20] * b[M3_01] + a[M3_21] * b[M3_11] + a[M3_22] * b[M3_21];\n        output[M3_02] = a[M3_00] * b[M3_02] + a[M3_01] * b[M3_12] + a[M3_02] * b[M3_22];\n        output[M3_12] = a[M3_10] * b[M3_02] + a[M3_11] * b[M3_12] + a[M3_12] * b[M3_22];\n        output[M3_22] = a[M3_20] * b[M3_02] + a[M3_21] * b[M3_12] + a[M3_22] * b[M3_22];\n    },\n    identity4: function (output) {\n        output[M4_00] = 1;\n        output[M4_10] = 0;\n        output[M4_20] = 0;\n        output[M4_30] = 0;\n        output[M4_01] = 0;\n        output[M4_11] = 1;\n        output[M4_21] = 0;\n        output[M4_31] = 0;\n        output[M4_02] = 0;\n        output[M4_12] = 0;\n        output[M4_22] = 1;\n        output[M4_32] = 0;\n        output[M4_03] = 0;\n        output[M4_13] = 0;\n        output[M4_23] = 0;\n        output[M4_33] = 1;\n    }\n};\nexport default {\n    cos: cos, sin: sin, clamp: clamp, vector: vector, matrix: matrix,\n    M4_00: M4_00, M4_10: M4_10, M4_20: M4_20, M4_30: M4_30,\n    M4_01: M4_01, M4_11: M4_11, M4_21: M4_21, M4_31: M4_31,\n    M4_02: M4_02, M4_12: M4_12, M4_22: M4_22, M4_32: M4_32,\n    M4_03: M4_03, M4_13: M4_13, M4_23: M4_23, M4_33: M4_33,\n    M3_00: M3_00, M3_10: M3_10, M3_20: M3_20,\n    M3_01: M3_01, M3_11: M3_11, M3_21: M3_21,\n    M3_02: M3_02, M3_12: M3_12, M3_22: M3_22\n};\n//# sourceMappingURL=calc.js.map","/**\n * The Camera is responsible of transforming World coordinates into Screen coordinates.\n * To do this, the Camera defines the following Vertex Shader function:\n *\n * ```glsl\n * vec4 worldPointToScreen(vec3 point)\n * ```\n *\n * And it can work only if the following attributes are defined:\n *\n * ```glsl\n * attribute float uniCanvasWidth;\n * attribute float uniCanvasHeight;\n * ```\n *\n * Because there is a lot of different cameras, they can need extra attributes.\n * That's why Camera provides two readonly properties:\n * * `glslUniforms`:\n * * `glslFunction`\n */\nvar Camera = /** @class */ (function () {\n    function Camera() {\n    }\n    Camera.prototype.getShaderIncludes = function () {\n        var _this = this;\n        return {\n            cameraUniforms: Object.keys(this.glslUniforms)\n                .map(function (key) { return \"uniform \" + _this.glslUniforms[key] + \" \" + key + \";\\n\"; })\n                .join(\"\"),\n            cameraFunction: this.glslFunction\n        };\n    };\n    return Camera;\n}());\nexport default Camera;\n//# sourceMappingURL=camera.js.map","import { __extends } from \"tslib\";\nimport Camera from \"./camera\";\n/**\n * This Camera is silly because it does not transform coordinates.\n */\nvar Silly = /** @class */ (function (_super) {\n    __extends(Silly, _super);\n    function Silly() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Silly.prototype, \"glslUniforms\", {\n        get: function () { return {}; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Silly.prototype, \"glslFunction\", {\n        get: function () {\n            return \"vec4 worldPointToScreen(vec3 point) {\\n    return vec4(point, 1.0);\\n}\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Silly.prototype.setUniformValues = function () { };\n    return Silly;\n}(Camera));\nexport default Silly;\n//# sourceMappingURL=silly.js.map","import { __extends } from \"tslib\";\nimport Camera from \"./camera\";\nimport Calc from \"../calc\";\nvar HALF = 0.5;\nvar HALF_PI = Math.PI * HALF;\nvar ALMOST_HALF_PI = 1.570796326794896;\n/**\n * Abstract camera for 3D space.\n */\nvar Space = /** @class */ (function (_super) {\n    __extends(Space, _super);\n    function Space() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cameraMatrix = new Float32Array(16);\n        return _this;\n    }\n    /**\n     * The camera looks at (targetX, targetY, targetZ)\n     * and it is at a distance of `distance`.\n     * That defines a sphere. We use `latitude` and `longitude` to know\n     * where the camera lies on the sphere.\n     * @param  latitude - Expressed in radians.\n     * @param  longitude - Expressed in radians.\n     */\n    Space.prototype.orbit = function (targetX, targetY, targetZ, distance, latitude, longitude) {\n        var lat = Calc.clamp(latitude, -ALMOST_HALF_PI, ALMOST_HALF_PI);\n        var lng = longitude - HALF_PI;\n        var cosLat = Math.cos(lat);\n        var sinLat = Math.sin(lat);\n        var cosLng = Math.cos(lng);\n        var sinLng = Math.sin(lng);\n        // Vecteur Z de la caméra.\n        var Zx = cosLng * cosLat;\n        var Zy = sinLat;\n        var Zz = sinLng * cosLat;\n        // Le vecteur X se déduit par un produit vectoriel de (0,1,0) avec Z.\n        var Xx = -Zz;\n        var Xy = 0;\n        var Xz = Zx;\n        // Comme (0,0,1) n'est pas orthogonal à Z, il faut normaliser X.\n        var len = Math.sqrt(Xx * Xx + Xy * Xy + Xz * Xz);\n        Xx /= len;\n        Xy /= len;\n        Xz /= len;\n        // Y peut alors se déduire par le produit vectoriel de X par Z.\n        // Et il n'y aura pas besoin de le normaliser.\n        var Yx = Zz * Xy - Zy * Xz;\n        var Yy = Xz * Zx - Xx * Zz;\n        var Yz = Zy * Xx - Zx * Xy;\n        // Translation.\n        var Tx = -(Zx * distance + targetX);\n        var Ty = -(Zy * distance + targetY);\n        var Tz = -(Zz * distance + targetZ);\n        // Le résultat est la multiplication de la projection avec la translation.\n        var result = this.cameraMatrix;\n        result[0] = Xx;\n        result[4] = Xy;\n        result[8] = Xz;\n        result[12] = Tx * Xx + Ty * Xy + Tz * Xz;\n        result[1] = Yx;\n        result[5] = Yy;\n        result[9] = Yz;\n        result[13] = Tx * Yx + Ty * Yy + Tz * Yz;\n        result[2] = Zx;\n        result[6] = Zy;\n        result[10] = Zz;\n        result[14] = Tx * Zx + Ty * Zy + Tz * Zz;\n        result[3] = 0;\n        result[7] = 0;\n        result[11] = 0;\n        result[15] = 1;\n    };\n    return Space;\n}(Camera));\nexport default Space;\n//# sourceMappingURL=space.js.map","import Silly from './silly';\nimport Perspective from './perspective';\nimport Cover2D from './cover-2d';\nexport default {\n    Silly: Silly,\n    Perspective: Perspective,\n    Cover2D: Cover2D\n};\n//# sourceMappingURL=index.js.map","import { __extends } from \"tslib\";\nimport Space from \"./space\";\n/**\n */\nvar Perspective = /** @class */ (function (_super) {\n    __extends(Perspective, _super);\n    function Perspective() {\n        var _this = _super.call(this) || this;\n        _this.perspectiveMatrix = new Float32Array(16);\n        /**\n         * Field view angle expressed in radians.\n         */\n        _this.fieldAngle = Math.PI / 4;\n        _this.near = 1;\n        _this.far = 4097;\n        _this.orbit(0, 0, 0, 1000, 0, 0);\n        return _this;\n    }\n    Object.defineProperty(Perspective.prototype, \"glslUniforms\", {\n        get: function () {\n            return {\n                uniCameraMatrix: \"mat4\",\n                uniPerspectiveMatrix: \"mat4\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Perspective.prototype, \"glslFunction\", {\n        get: function () {\n            return \"vec4 worldPointToScreen(vec3 point) {\\n    return uniPerspectiveMatrix * uniCameraMatrix * vec4(point, 1.0);\\n}\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param prg - Attributes have to be set in this Program.\n     * @param width - Canvas Width.\n     * @param height - Canvas Height.\n     * @param time - Time of the rendered frame in milliseconds.\n     */\n    Perspective.prototype.setUniformValues = function (prg, width, height) {\n        var _a = this, near = _a.near, far = _a.far, fieldAngle = _a.fieldAngle;\n        var f = Math.tan(0.5 * (Math.PI - fieldAngle));\n        var rangeInv = 1.0 / (near - far);\n        var result = this.perspectiveMatrix;\n        result[0] = f * height / width;\n        result[1] = 0;\n        result[2] = 0;\n        result[3] = 0;\n        result[4] = 0;\n        result[5] = f;\n        result[6] = 0;\n        result[7] = 0;\n        result[8] = 0;\n        result[9] = 0;\n        result[10] = (near + far) * rangeInv;\n        result[11] = -1;\n        result[12] = 0;\n        result[13] = 0;\n        result[14] = near * far * rangeInv * 2;\n        result[15] = 0;\n        prg.uniforms.uniCameraMatrix = this.cameraMatrix;\n        prg.uniforms.uniPerspectiveMatrix = this.perspectiveMatrix;\n    };\n    return Perspective;\n}(Space));\nexport default Perspective;\n//# sourceMappingURL=perspective.js.map","import { __assign, __extends } from \"tslib\";\nimport Camera from \"./camera\";\n/**\n * The Camera is responsible of transforming World coordinates into Screen coordinates.\n * To do this, the Camera defines the following Vertex Shader function:\n *\n * ```glsl\n * vec4 worldPointToScreen(vec3 point)\n * ```\n *\n * And it can work only if the following attributes are defined:\n *\n * ```glsl\n * attribute float uniCanvasWidth;\n * attribute float uniCanvasHeight;\n * ```\n *\n * Because there is a lot of different cameras, they can need extra attributes.\n * That's why Camera provides two readonly properties:\n * * `glslUniforms`:\n * * `glslFunction`\n */\nvar Cover2D = /** @class */ (function (_super) {\n    __extends(Cover2D, _super);\n    function Cover2D(params) {\n        var _this = _super.call(this) || this;\n        _this.zoom = 1;\n        _this.x = 0;\n        _this.y = 0;\n        _this.params = __assign({ size: 1024 }, params);\n        return _this;\n    }\n    Object.defineProperty(Cover2D.prototype, \"glslUniforms\", {\n        get: function () {\n            return {\n                uniCameraInvertedScale: \"float\",\n                uniCameraScaleX: \"float\",\n                uniCameraScaleY: \"float\",\n                uniCameraX: \"float\",\n                uniCameraY: \"float\"\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Cover2D.prototype, \"glslFunction\", {\n        get: function () {\n            return \"vec4 worldPointToScreen(vec3 point) {\\n    return vec4((point.x - uniCameraX) * uniCameraScaleX,\\n                (point.y - uniCameraY) * uniCameraScaleY,\\n                point.z,\\n                /*uniCameraInvertedScale **/ \" + (this.params.size / 2).toFixed(1) + \");\\n}\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param prg - Attributes have to be set in this Program.\n     * @param width - Canvas Width.\n     * @param height - Canvas Height.\n     * @param time - Time of the rendered frame in milliseconds.\n     */\n    Cover2D.prototype.setUniformValues = function (prg, width, height) {\n        if (width > height) {\n            // Landscape.\n            prg.uniforms.uniCameraScaleX = 1;\n            prg.uniforms.uniCameraScaleY = width / height;\n        }\n        else {\n            // Portrait.\n            prg.uniforms.uniCameraScaleX = height / width;\n            prg.uniforms.uniCameraScaleY = 1;\n        }\n        prg.uniforms.uniCameraX = this.x;\n        prg.uniforms.uniCameraY = this.y;\n        var zoom = this.zoom;\n        if (zoom === 0) {\n            prg.uniforms.uniCameraInvertedScale = 1;\n        }\n        else {\n            var invertedScale = 1 / zoom;\n            prg.uniforms.uniCameraInvertedScale = invertedScale;\n        }\n    };\n    return Cover2D;\n}(Camera));\nexport default Cover2D;\n//# sourceMappingURL=cover-2d.js.map","// tslint:disable:no-any\n// tslint:disable:no-unsafe-any\nexport default function castString(value, defaultValue) {\n    if (defaultValue === void 0) { defaultValue = ''; }\n    var t = typeof value;\n    if (t === 'number' && !isNaN(value)) {\n        return \"\" + value;\n    }\n    if (t === 'string') {\n        return value;\n    }\n    return defaultValue;\n}\n//# sourceMappingURL=string.js.map","import { __values } from \"tslib\";\nvar BPE = Float32Array.BYTES_PER_ELEMENT;\nvar DIM1 = 1;\nvar DIM2 = 2;\nvar DIM3 = 3;\nvar DIM4 = 4;\n/**\n * Creating  a  WebGL  program  for shaders  is  painful.  This  class\n * simplifies the process.\n *\n * @class Program\n *\n * Object properties starting with `$` are WebGL uniforms or attributes.\n * Uniforms behave as expected: you can read/write a value.\n * Attributes when read, return the location. And when written, enable/disabled\n * this attribute. So you read integers and writte booleans.\n *\n * @param gl - WebGL context.\n * @param codes  - Object  with two  mandatory attributes:  `vert` for\n * vertex shader and `frag` for fragment shader.\n * @param  includes  -  (optional)  If  defined,  the  `#include  foo`\n * directives  of  shaders   will  be  replaced  by   the  content  of\n * `includes.foo`.\n */\nvar Program = /** @class */ (function () {\n    function Program(gl, _codes, includes) {\n        if (includes === void 0) { includes = {}; }\n        var codes = parseIncludes(_codes, includes);\n        this.gl = gl;\n        Object.freeze(this.gl);\n        this.BPE = BPE;\n        Object.freeze(this.BPE);\n        this._typesNamesLookup = getTypesNamesLookup(gl);\n        var shaderProgram = gl.createProgram();\n        if (!shaderProgram) {\n            throw Error('Unable to create WebGLProgram!');\n        }\n        this.program = shaderProgram;\n        var vertShader = getVertexShader(gl, codes.vert);\n        gl.attachShader(shaderProgram, vertShader);\n        var fragShader = getFragmentShader(gl, codes.frag);\n        gl.attachShader(shaderProgram, fragShader);\n        gl.linkProgram(shaderProgram);\n        this.use = function () {\n            gl.useProgram(shaderProgram);\n        };\n        this.attribs = this.createAttributes();\n        this.uniforms = {};\n        this.uniformsLocation = this.createUniformsLocation();\n    }\n    Program.prototype.use = function () {\n        this.gl.useProgram(this.program);\n    };\n    Program.prototype.getTypeName = function (typeId) {\n        return this._typesNamesLookup[typeId];\n    };\n    Program.prototype.bindAttribs = function (buffer) {\n        var e_1, _a, e_2, _b;\n        var names = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            names[_i - 1] = arguments[_i];\n        }\n        var that = this;\n        var gl = this.gl;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        var totalSize = 0;\n        try {\n            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n                var name_1 = names_1_1.value;\n                var attrib = that.attribs[name_1];\n                if (!attrib) {\n                    throw Error(\"Cannot find attribute \\\"\" + name_1 + \"!\\nIt may be not active because unused in the shader.\\nAvailable attributes are: \" + Object.keys(that.attribs)\n                        .map(function (n) {\n                        return \"\\\"\" + n + \"\\\"\";\n                    })\n                        .join(', ') + \" (\" + String(that.attribs.length) + \")\");\n                }\n                totalSize += attrib.size * attrib.length * BPE;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var offset = 0;\n        try {\n            for (var names_2 = __values(names), names_2_1 = names_2.next(); !names_2_1.done; names_2_1 = names_2.next()) {\n                var name_2 = names_2_1.value;\n                var attrib = that.attribs[name_2];\n                gl.enableVertexAttribArray(attrib.location);\n                gl.vertexAttribPointer(attrib.location, attrib.size * attrib.length, gl.FLOAT, false, // No normalisation.\n                totalSize, offset);\n                offset += attrib.size * attrib.length * BPE;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (names_2_1 && !names_2_1.done && (_b = names_2.return)) _b.call(names_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    Program.prototype.setUniform = function (name, value) {\n        var _a = this, uniforms = _a.uniforms, uniformsLocation = _a.uniformsLocation;\n        if (typeof uniformsLocation[name] === 'undefined') {\n            console.error(\"Uniform \\\"\" + name + \"\\\" does not exist in this WebGL Program!\");\n            var uniformsName = Object.keys(uniformsLocation);\n            if (uniformsName.length === 0) {\n                console.error(\"Actually, this program has no uniform at all.\");\n            }\n            else {\n                console.error(\"Available uniforms are:\", uniformsName.join(\", \"));\n            }\n            throw Error(\"Uniform \\\"\" + name + \"\\\" was ot found!\");\n        }\n        uniforms[name] = value;\n    };\n    Program.prototype.createAttributes = function () {\n        var _a = this, gl = _a.gl, program = _a.program;\n        var attribs = {};\n        var attribsCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n        for (var index = 0; index < attribsCount; index++) {\n            var item = gl.getActiveAttrib(program, index);\n            if (!item) {\n                continue;\n            }\n            item.typeName = this.getTypeName(item.type);\n            item.length = this.getSize(gl, item);\n            item.location = gl.getAttribLocation(program, item.name);\n            attribs[item.name] = item;\n            Object.defineProperty(this, \"\" + item.name, {\n                value: item.location,\n                writable: false,\n                enumerable: true,\n                configurable: false,\n            });\n        }\n        return attribs;\n    };\n    Program.prototype.getSize = function (gl, item) {\n        switch (item.type) {\n            case gl.FLOAT_VEC4:\n                return DIM4;\n            case gl.FLOAT_VEC3:\n                return DIM3;\n            case gl.FLOAT_VEC2:\n                return DIM2;\n            case gl.FLOAT:\n                return DIM1;\n            default:\n                throw Error(\"[webgl.program:getSize] I don't know the size of the attribute \\\"\" + item.name + \"\\\" because I don't know the type \\\"\" + this.getTypeName(item.type) + \"\\\"!\");\n        }\n    };\n    Program.prototype.createUniformsLocation = function () {\n        var _a = this, gl = _a.gl, program = _a.program, uniforms = _a.uniforms;\n        var uniformsLocation = {};\n        var uniformsCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n        for (var index = 0; index < uniformsCount; index++) {\n            var item = gl.getActiveUniform(program, index);\n            if (!item) {\n                continue;\n            }\n            var name_3 = sanitizeUniformName(item.name);\n            var location_1 = gl.getUniformLocation(program, item.name);\n            if (!location_1) {\n                continue;\n            }\n            uniformsLocation[name_3] = location_1;\n            Object.defineProperty(uniforms, \"\" + name_3, {\n                set: this.createUniformSetter(item, uniformsLocation[name_3], this._typesNamesLookup),\n                get: this.createUniformGetter(item),\n                enumerable: true,\n                configurable: false,\n            });\n        }\n        return uniformsLocation;\n    };\n    Program.prototype.createUniformSetter = function (item, nameGL, lookup) {\n        var gl = this.gl;\n        var name = sanitizeUniformName(item.name);\n        var nameJS = \"_\" + name;\n        switch (item.type) {\n            case gl.BYTE:\n            case gl.UNSIGNED_BYTE:\n            case gl.SHORT:\n            case gl.UNSIGNED_SHORT:\n            case gl.INT:\n            case gl.UNSIGNED_INT:\n            case gl.SAMPLER_2D: // For textures, we specify the texture unit.\n                if (item.size === 1) {\n                    return function (v) {\n                        gl.uniform1i(nameGL, v);\n                        this[nameJS] = v;\n                    };\n                }\n                else {\n                    return function (v) {\n                        gl.uniform1iv(nameGL, v);\n                        this[nameJS] = v;\n                    };\n                }\n            case gl.FLOAT:\n                if (item.size === 1) {\n                    return function (v) {\n                        gl.uniform1f(nameGL, v);\n                        this[nameJS] = v;\n                    };\n                }\n                else {\n                    return function (v) {\n                        gl.uniform1fv(nameGL, v);\n                        this[nameJS] = v;\n                    };\n                }\n            case gl.FLOAT_VEC2:\n                if (item.size === 1) {\n                    return function (v) {\n                        gl.uniform2fv(nameGL, v);\n                        this[nameJS] = v;\n                    };\n                }\n                else {\n                    throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC2 in uniform \\\"\" + item.name + \"\\\"!\");\n                }\n            case gl.FLOAT_VEC3:\n                if (item.size === 1) {\n                    return function (v) {\n                        gl.uniform3fv(nameGL, v);\n                        this[nameJS] = v;\n                    };\n                }\n                else {\n                    throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC3 in uniform \\\"\" + item.name + \"\\\"!\");\n                }\n            case gl.FLOAT_VEC4:\n                if (item.size === 1) {\n                    return function (v) {\n                        gl.uniform4fv(nameGL, v);\n                        this[nameJS] = v;\n                    };\n                }\n                else {\n                    throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC4 in uniform \\\"\" + item.name + \"\\\"!\");\n                }\n            case gl.FLOAT_MAT3:\n                if (item.size === 1) {\n                    return function (v) {\n                        gl.uniformMatrix3fv(nameGL, false, v);\n                        this[nameJS] = v;\n                    };\n                }\n                else {\n                    throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT3 in uniform \\\"\" + item.name + \"\\\"!\");\n                }\n            case gl.FLOAT_MAT4:\n                if (item.size === 1) {\n                    return function (v) {\n                        gl.uniformMatrix4fv(nameGL, false, v);\n                        this[nameJS] = v;\n                    };\n                }\n                else {\n                    throw Error(\"[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT4 in uniform \\\"\" + item.name + \"\\\"!\");\n                }\n            default:\n                throw Error(\"[webgl.program.createWriter] Don't know how to deal with uniform \\\"\" + item.name + \"\\\" of type \" + lookup[item.type] + \"!\");\n        }\n    };\n    Program.prototype.createUniformGetter = function (item) {\n        var name = \"_\" + item.name;\n        return function () {\n            return this[name];\n        };\n    };\n    return Program;\n}());\nexport default Program;\n/**\n * This is a preprocessor for shaders.\n * Directives  `#include`  will be  replaced  by  the content  of  the\n * correspondent attribute in `includes`.\n */\nfunction parseIncludes(codes, includes) {\n    return {\n        vert: parseInclude(codes.vert, includes),\n        frag: parseInclude(codes.frag, includes),\n    };\n}\nfunction parseInclude(code, includes) {\n    return code\n        .split('\\n')\n        .map(function (line) {\n        if (!line.trim().startsWith('#include')) {\n            return line;\n        }\n        var pos = line.indexOf('#include') + '#include'.length;\n        var includeName = line.substr(pos).trim();\n        // We accept all this systaxes:\n        // #include foo\n        // #include 'foo'\n        // #include <foo>\n        // #include \"foo\"\n        if ('\\'<\"'.indexOf(includeName.charAt(0)) > -1) {\n            includeName = includeName.substr(1, includeName.length - '<>'.length);\n        }\n        var snippet = includes[includeName];\n        if (typeof snippet !== 'string') {\n            console.error(\"Include <\" + includeName + \"> not found in \", includes);\n            throw Error(\"Include not found in shader: \" + includeName);\n        }\n        return snippet;\n    })\n        .join('\\n');\n}\nfunction getShader(type, gl, code) {\n    if (type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {\n        throw Error('Type must be VERTEX_SHADER or FRAGMENT_SHADER!');\n    }\n    var shader = gl.createShader(type);\n    if (!shader) {\n        throw Error(\"Unable to create a \" + (type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT') + \" shader!\");\n    }\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        var errorMessage = gl.getShaderInfoLog(shader) || \"NULL\";\n        console.error(\"An error occurred compiling the shader: \" + errorMessage);\n        // tslint:disable-next-line:no-console\n        console.info(getCodeSection(code, errorMessage));\n        // tslint:disable-next-line:no-console\n        throw Error(\"Unable to create a \" + (type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT') + \" shader!\");\n    }\n    return shader;\n}\nfunction getFragmentShader(gl, code) {\n    return getShader(gl.FRAGMENT_SHADER, gl, code);\n}\nfunction getVertexShader(gl, code) {\n    return getShader(gl.VERTEX_SHADER, gl, code);\n}\nfunction getTypesNamesLookup(gl) {\n    var lookup = {};\n    for (var k in gl) {\n        if (k !== k.toUpperCase()) {\n            continue;\n        }\n        var v = gl[k];\n        if (typeof v === 'number') {\n            lookup[v] = k;\n        }\n    }\n    return lookup;\n}\n/**\n * For arrays, uniform names can be like this: \"lights[0]\".\n * This function will remove the \"[0]\" if it exist.\n */\nfunction sanitizeUniformName(name) {\n    var pos = name.indexOf(\"[\");\n    if (pos === -1)\n        return name;\n    return name.substr(0, pos);\n}\nvar RX_ERROR_MESSAGE = /ERROR: ([0-9]+):([0-9]+):/g;\n/**\n * Return a portion of the code that is two lines before the error and two lines after.\n */\nfunction getCodeSection(code, errorMessage) {\n    var lines = code.split(/\\n\\r?/);\n    lines.unshift(\"\"); // Because lines numbers start at 1\n    RX_ERROR_MESSAGE.lastIndex = -1; // Reinit RegExp\n    var matcher = RX_ERROR_MESSAGE.exec(errorMessage);\n    if (!matcher) {\n        return code;\n    }\n    var lineNumber = Number(matcher[2]);\n    var firstLine = Math.max(1, lineNumber - 2);\n    var lastLine = Math.min(lines.length - 1, lineNumber + 2);\n    var outputLines = [\"Here is an extract of the shader code:\"];\n    for (var n = firstLine; n <= lastLine; n++) {\n        outputLines.push(\"| \" + n + \":    \" + lines[n]);\n    }\n    return outputLines.join(\"\\n\");\n}\n//# sourceMappingURL=program.js.map","import { __values } from \"tslib\";\nimport Program from '../webgl/program';\nvar Painter = /** @class */ (function () {\n    function Painter() {\n        this._programs = [];\n        this._scene = null;\n    }\n    Object.defineProperty(Painter.prototype, \"scene\", {\n        get: function () {\n            return this._scene;\n        },\n        set: function (scene) {\n            if (scene === this._scene) {\n                return;\n            }\n            if (this._scene) {\n                this.internalDestroy(this._scene);\n            }\n            this._scene = scene;\n            if (scene) {\n                this.initialize(scene);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Painter.prototype.createProgram = function (shaders, includes) {\n        if (includes === void 0) { includes = {}; }\n        var scene = this._scene;\n        if (!scene) {\n            throw Error('This painter has no scene!\\ncreateProfram() should only be called from initialize().');\n        }\n        var prg = new Program(scene.gl, shaders, includes);\n        this._programs.push(prg);\n        return prg;\n    };\n    Painter.prototype.fatal = function (message) {\n        console.error(\"Fatal error in Painter:\", message);\n        return new Error(message);\n    };\n    Painter.prototype.internalDestroy = function (scene) {\n        var e_1, _a;\n        var gl = scene.gl;\n        try {\n            for (var _b = __values(this._programs), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var prg = _c.value;\n                gl.deleteProgram(prg);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return Painter;\n}());\nexport default Painter;\n//# sourceMappingURL=painter.js.map","/**\n * Background the screen by filling it with an image that covers it entirely.\n */\nimport { __extends } from \"tslib\";\nimport castString from '../../converter/string';\nimport Painter from '../painter';\nvar NB_VERTICES_IN_SQUARE = 4;\nvar BackgroundPainter = /** @class */ (function (_super) {\n    __extends(BackgroundPainter, _super);\n    /**\n     * params: { atlas, align }\n     * - align: if undefined, the background will be centered.\n     *          \"R\" means that the Right edge of the background is always visible.\n     *          \"L\" means the same for Left.\n     *          \"T\" for Top.\n     *          \"B\" for \"Bottom\".\n     */\n    function BackgroundPainter(params) {\n        var _this = _super.call(this) || this;\n        _this.params = params;\n        return _this;\n    }\n    BackgroundPainter.prototype.render = function () {\n        var _a = this, scene = _a.scene, prg = _a.prg, atlas = _a.atlas, buff = _a.buff;\n        if (!scene || !prg || !atlas || !buff) {\n            return;\n        }\n        var gl = scene.gl;\n        gl.enable(gl.DEPTH_TEST);\n        prg.use();\n        atlas.activate();\n        var uniforms = prg;\n        uniforms.$uniTexture = 0;\n        prg.setUniform('uniAspectRatio', scene.width / scene.height);\n        prg.bindAttribs(buff, 'attXY');\n        gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, NB_VERTICES_IN_SQUARE);\n    };\n    BackgroundPainter.prototype.destroy = function (scene) {\n        var gl = scene.gl;\n        var buff = this.buff;\n        if (!buff) {\n            return;\n        }\n        gl.deleteBuffer(buff);\n    };\n    BackgroundPainter.prototype.initialize = function (scene) {\n        var params = this.params;\n        var atlas = params.atlas;\n        this.atlas = atlas;\n        this.prg = this.createProgram({\n            frag: FRAG,\n            vert: getVert(castString(params.align).toUpperCase()),\n        });\n        var gl = scene.gl;\n        var buff = gl.createBuffer();\n        if (!buff) {\n            throw this.fatal('Not enough memory to create an array buffer!');\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), gl.STATIC_DRAW);\n        this.buff = buff;\n    };\n    return BackgroundPainter;\n}(Painter));\nexport default BackgroundPainter;\nfunction getVert(align) {\n    var x = '';\n    var y = '';\n    if (align.indexOf('B') !== -1) {\n        y = 'location.y -= uniAspectRatio - 1.0;';\n    }\n    else if (align.indexOf('T') !== -1) {\n        y = 'location.y += uniAspectRatio - 1.0;';\n    }\n    if (align.indexOf('R') !== -1) {\n        x = 'location.x -= 1.0 / uniAspectRatio - 1.0;';\n    }\n    else if (align.indexOf('L') !== -1) {\n        x = 'location.x += 1.0 / uniAspectRatio - 1.0;';\n    }\n    return \"uniform float uniAspectRatio;\\nattribute vec2 attXY;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  varUV = attXY;\\n  vec2 location = 2.0 * (attXY - vec2(0.5, 0.5));\\n\\n  if (uniAspectRatio > 1.0) {\\n    location.y *= uniAspectRatio;\" + y + \"\\n  } else {\\n    location.x /= uniAspectRatio;\" + x + \"\\n  }\\n\\n  gl_Position = vec4(location.x, -location.y, 0.9999999, 1.0);\\n}\";\n}\nvar FRAG = \"precision mediump float;\\nuniform sampler2D uniTexture;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  vec4 color = texture2D( uniTexture, varUV );\\n  gl_FragColor = color;\\n}\";\n//# sourceMappingURL=background.js.map","// tslint:disable:no-magic-numbers\n// tslint:disable:ban\nimport { __read, __values } from \"tslib\";\n/**\n * Fast color manipulations.\n * Attributes R  (red), G  (green), B  (blue), A  (alpha), H  (hue), S\n * (saturation), and L (luminance) are all floats between 0 and 1.\n */\nvar CODE_CSS_LENGTHS = ['#RGB'.length, '#RGBA'.length, '#RRGGBB'.length, '#RRGGBBAA'.length];\nvar RX_HEX_COLOR = /^#[0-9A-F]+$/gi;\nvar LUMINANCE_THRESHOLD = 0.6;\nvar Color = /** @class */ (function () {\n    function Color(codeCSS) {\n        if (codeCSS === void 0) { codeCSS = '#000000'; }\n        this.R = 0;\n        this.G = 0;\n        this.B = 0;\n        this.H = 0;\n        this.S = 0;\n        this.L = 0;\n        this.A = 1;\n        this.parse(codeCSS);\n    }\n    /**\n     * A code CSS is valid if it starts with a '#' and has a length of 3, 4, 6 or 8.\n     */\n    Color.isValid = function (codeCSS) {\n        var e_1, _a;\n        RX_HEX_COLOR.lastIndex = -1;\n        if (!RX_HEX_COLOR.test(codeCSS)) {\n            return false;\n        }\n        try {\n            for (var CODE_CSS_LENGTHS_1 = __values(CODE_CSS_LENGTHS), CODE_CSS_LENGTHS_1_1 = CODE_CSS_LENGTHS_1.next(); !CODE_CSS_LENGTHS_1_1.done; CODE_CSS_LENGTHS_1_1 = CODE_CSS_LENGTHS_1.next()) {\n                var len = CODE_CSS_LENGTHS_1_1.value;\n                if (codeCSS.length === len) {\n                    return true;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (CODE_CSS_LENGTHS_1_1 && !CODE_CSS_LENGTHS_1_1.done && (_a = CODE_CSS_LENGTHS_1.return)) _a.call(CODE_CSS_LENGTHS_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return false;\n    };\n    Color.normalize = function (codeCSS) {\n        var color = new Color(codeCSS);\n        return color.stringify();\n    };\n    Color.luminance = function (codeCSS) {\n        var color = new Color(codeCSS);\n        return color.luminance();\n    };\n    /**\n     * Returns 1 for bright colors and 0 for dark colors.\n     */\n    Color.luminanceStep = function (codeCSS) {\n        var color = new Color(codeCSS);\n        return color.luminanceStep();\n    };\n    Color.fromArrayRGB = function (rgb) {\n        var _a = __read(rgb, 3), R = _a[0], G = _a[1], B = _a[2];\n        return Color.newRGB(R, G, B);\n    };\n    Color.fromArrayRGBA = function (rgba) {\n        var _a = __read(rgba, 4), R = _a[0], G = _a[1], B = _a[2], A = _a[3];\n        return Color.newRGBA(R, G, B, A);\n    };\n    /**\n     * Mix two colors. alpha should be between 0 and 1,\n     * but there is no check on this.\n     * If alpha is 0, the resulting color is `color1`,\n     * if alpha is 1, the resulting color is `color2`.\n     */\n    Color.mix = function (color1, color2, alpha) {\n        if (alpha === void 0) { alpha = 0.5; }\n        var beta = 1 - alpha;\n        return Color.newRGBA(alpha * color2.R + beta * color1.R, alpha * color2.G + beta * color1.G, alpha * color2.B + beta * color1.B, alpha * color2.A + beta * color1.A);\n    };\n    /**\n     * If `colors` has only two elements, this method is the same as `mix()`.\n     * Otherwise, it will perform a linear blending through the colors.\n     * If alpha is 0, the resulting color is `colors[0]`,\n     * If alpha is 1, the resulting color is `colors[colors.length - 1]`,\n     */\n    Color.ramp = function (colors, alpha) {\n        if (alpha === void 0) { alpha = 0.5; }\n        if (colors.length === 0) {\n            return Color.newBlack();\n        }\n        if (colors.length === 1) {\n            return colors[0];\n        }\n        var spacesCount = colors.length - 1;\n        var firstColorIndex = Math.floor(alpha * spacesCount);\n        var color1 = colors[firstColorIndex];\n        if (firstColorIndex === spacesCount) {\n            return color1;\n        }\n        var color2 = colors[firstColorIndex + 1];\n        var translatedAlpha = firstColorIndex + alpha / spacesCount;\n        return Color.mix(color1, color2, translatedAlpha);\n    };\n    Color.newBlack = function () {\n        return Color.newRGB(0, 0, 0);\n    };\n    Color.newWhite = function () {\n        return Color.newRGB(1, 1, 1);\n    };\n    /**\n     * Create a new Color instance base on R,G,B channels.\n     *\n     * @param red - Value between 0 and 1.\n     * @param green - Value between 0 and 1.\n     * @param blue - Value between 0 and 1.\n     * @returns New instance of Color.\n     */\n    Color.newRGB = function (red, green, blue) {\n        var color = new Color();\n        color.R = red;\n        color.G = green;\n        color.B = blue;\n        color.A = 1;\n        return color;\n    };\n    /**\n     * Create a new Color instance base on R,G,B,A channels.\n     *\n     * @param red - Value between 0 and 1.\n     * @param green - Value between 0 and 1.\n     * @param blue - Value between 0 and 1.\n     * @param alpha - Value between 0 and 1.\n     * @returns New instance of Color.\n     */\n    Color.newRGBA = function (red, green, blue, alpha) {\n        var color = new Color();\n        color.R = red;\n        color.G = green;\n        color.B = blue;\n        color.A = alpha;\n        return color;\n    };\n    Color.prototype.toArrayRGB = function () {\n        return [this.R, this.G, this.B];\n    };\n    Color.prototype.toArrayRGBA = function () {\n        return [this.R, this.G, this.B, this.A];\n    };\n    /**\n     * Parse a color writtent in CSS syntax.\n     *\n     * @param code - CSS color.\n     * @returns `true` if the color has valid syntax.\n     */\n    Color.prototype.parse = function (code) {\n        if (code === void 0) { code = '#000000'; }\n        var input = code.trim().toUpperCase();\n        if (this.parseHexa.call(this, input)) {\n            return true;\n        }\n        if (this.parseRGB.call(this, input)) {\n            return true;\n        }\n        if (this.parseRGBA.call(this, input)) {\n            return true;\n        }\n        if (this.parseHSL.call(this, input)) {\n            return true;\n        }\n        // @TODO parseHSLA.\n        return false;\n    };\n    /**\n     * @see https://en.wikipedia.org/wiki/Grayscale\n     * @this Color\n     * @returns {undefined}\n     */\n    Color.prototype.luminance = function () {\n        var LUM_RED = 0.2126;\n        var LUM_GREEN = 0.7152;\n        var LUM_BLUE = 0.0722;\n        return LUM_RED * this.R + LUM_GREEN * this.G + LUM_BLUE * this.B;\n    };\n    /**\n     * @returns {integer} 0 if the color is dark and 1 if it is light.\n     */\n    Color.prototype.luminanceStep = function () {\n        return this.luminance() < LUMINANCE_THRESHOLD ? 0 : 1;\n    };\n    /**\n     * @this Color\n     * @returns String value of the color. `#fd45a7`.\n     */\n    Color.prototype.stringify = function () {\n        var FF = 0xFF;\n        var color = hexa2(this.R * FF) + hexa2(this.G * FF) + hexa2(this.B * FF);\n        if (this.A < 1) {\n            color += hexa2(this.A * FF);\n        }\n        return \"#\" + color;\n    };\n    Color.prototype.copy = function () {\n        var newColor = new Color();\n        newColor.R = this.R;\n        newColor.G = this.G;\n        newColor.B = this.B;\n        newColor.A = this.A;\n        newColor.H = this.H;\n        newColor.S = this.S;\n        newColor.L = this.L;\n        return newColor;\n    };\n    /**\n     * @see https://en.wikipedia.org/wiki/HSL_and_HSV#Converting_to_RGB\n     */\n    Color.prototype.hsl2rgb = function () {\n        var H = 6 * this.H;\n        var S = this.S;\n        var L = this.L;\n        var chroma = (1 - Math.abs(2 * L - 1)) * S;\n        var x = chroma * (1 - Math.abs((H % 2) - 1));\n        var R = 0;\n        var G = 0;\n        var B = 0;\n        if (H < 3) {\n            if (H < 1) {\n                R = chroma;\n                G = x;\n                B = 0;\n            }\n            else if (H < 2) {\n                R = x;\n                G = chroma;\n                B = 0;\n            }\n            else {\n                // H == 2.\n                R = 0;\n                G = chroma;\n                B = x;\n            }\n        }\n        else if (H < 4) {\n            R = 0;\n            G = x;\n            B = chroma;\n        }\n        else if (H < 5) {\n            R = x;\n            G = 0;\n            B = chroma;\n        }\n        else {\n            R = chroma;\n            G = 0;\n            B = x;\n        }\n        var shift = L - chroma * 0.5;\n        this.R = R + shift;\n        this.G = G + shift;\n        this.B = B + shift;\n    };\n    Color.prototype.rgb2hsl = function () {\n        var R = this.R;\n        var G = this.G;\n        var B = this.B;\n        var min = Math.min(R, G, B);\n        var max = Math.max(R, G, B);\n        var delta = max - min;\n        this.L = 0.5 * (max + min);\n        if (delta < 0.000001) {\n            this.H = 0;\n            this.S = 0;\n        }\n        else {\n            this.S = delta / (1 - Math.abs(2 * this.L - 1));\n            if (max === R) {\n                if (G >= B) {\n                    this.H = INV6 * ((G - B) / delta);\n                }\n                else {\n                    this.H = 1 - INV6 * ((B - G) / delta);\n                }\n            }\n            else if (max === G) {\n                this.H = INV6 * (2 + (B - R) / delta);\n            }\n            else {\n                this.H = INV6 * (4 + (R - G) / delta);\n            }\n        }\n    };\n    Color.prototype.parseHexa = function (text) {\n        if (text.charAt(0) !== '#') {\n            return false;\n        }\n        var R = 0;\n        var G = 0;\n        var B = 0;\n        var A = 1;\n        switch (text.length) {\n            case 4:\n                R = parseInt(text.charAt(1), 16) * INV15;\n                G = parseInt(text.charAt(2), 16) * INV15;\n                B = parseInt(text.charAt(3), 16) * INV15;\n                break;\n            case 5:\n                R = parseInt(text.charAt(1), 16) * INV15;\n                G = parseInt(text.charAt(2), 16) * INV15;\n                B = parseInt(text.charAt(3), 16) * INV15;\n                A = parseInt(text.charAt(4), 16) * INV15;\n                break;\n            case 7:\n                R = parseInt(text.substr(1, 2), 16) * INV255;\n                G = parseInt(text.substr(3, 2), 16) * INV255;\n                B = parseInt(text.substr(5, 2), 16) * INV255;\n                break;\n            case 9:\n                R = parseInt(text.substr(1, 2), 16) * INV255;\n                G = parseInt(text.substr(3, 2), 16) * INV255;\n                B = parseInt(text.substr(5, 2), 16) * INV255;\n                A = parseInt(text.substr(7, 2), 16) * INV255;\n                break;\n            default:\n        }\n        if (isNaN(R) || isNaN(G) || isNaN(B) || isNaN(A)) {\n            this.R = this.G = this.B = this.A = 0;\n        }\n        else {\n            this.R = R;\n            this.G = G;\n            this.B = B;\n            this.A = A;\n        }\n        return true;\n    };\n    /**\n     * @param text - `rgb(200, 140, 50)`\n     * @returns `true` if `text` is a valid `rgb()` syntax.\n     */\n    Color.prototype.parseRGB = function (text) {\n        var m = RX_RGB.exec(text);\n        if (!m) {\n            return false;\n        }\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\n        this.A = 1;\n        return true;\n    };\n    /**\n     * @param text - `rgba(200, 140, 50, 0.5)`\n     * @returns `true` if `text` is a valid `rgba()` syntax.\n     */\n    Color.prototype.parseRGBA = function (text) {\n        var m = RX_RGBA.exec(text);\n        if (!m) {\n            return false;\n        }\n        this.R = clamp01(parseInt(m[1], 10) * INV255);\n        this.G = clamp01(parseInt(m[2], 10) * INV255);\n        this.B = clamp01(parseInt(m[3], 10) * INV255);\n        this.A = clamp01(parseFloat(m[4]));\n        return true;\n    };\n    /**\n     * @param text - `hsl(200, 140, 50)`\n     * @returns `true` if `text` is a valid `hsl()` syntax.\n     */\n    Color.prototype.parseHSL = function (text) {\n        var m = RX_HSL.exec(text);\n        if (!m) {\n            return false;\n        }\n        this.H = clamp01(parseInt(m[1], 10) * INV359);\n        this.S = clamp01(parseInt(m[2], 10) * INV99);\n        this.L = clamp01(parseInt(m[3], 10) * INV99);\n        this.A = 1;\n        this.hsl2rgb();\n        return true;\n    };\n    return Color;\n}());\nexport default Color;\nvar INV6 = 1 / 6;\nvar INV15 = 1 / 15;\nvar INV99 = 1 / 99;\nvar INV255 = 1 / 255;\nvar INV359 = 1 / 359;\nvar RX_RGB = /^RGB[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\nvar RX_RGBA = /^RGBA[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)[^0-9.]+([0-9.]+)/;\nvar RX_HSL = /^HSL[\\s(]+([0-9]+)[^0-9]+([0-9]+)[^0-9]+([0-9]+)/;\nfunction clamp01(value) {\n    if (value < 0) {\n        return 0;\n    }\n    if (value > 1) {\n        return 1;\n    }\n    return value;\n}\nfunction hexa2(value) {\n    var out = Math.floor(value).toString(16);\n    if (out.length < 2) {\n        out = \"0\" + out;\n    }\n    return out;\n}\n//# sourceMappingURL=color.js.map","import { __extends } from \"tslib\";\n/**\n * Clear the screen by filling it with a plain color.\n * This color is defined by attributes red, gree, blue and alpha, which must be between 0 and 1.\n */\nimport Color from '../webgl/color';\nimport Painter from './painter';\nvar ClearPainter = /** @class */ (function (_super) {\n    __extends(ClearPainter, _super);\n    function ClearPainter(params) {\n        var _this = _super.call(this) || this;\n        _this.params = params;\n        _this._red = 0.8;\n        _this._green = 0.4;\n        _this._blue = 0.2;\n        _this._alpha = 1;\n        return _this;\n    }\n    Object.defineProperty(ClearPainter.prototype, \"red\", {\n        get: function () {\n            return this._red;\n        },\n        set: function (v) {\n            this._red = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClearPainter.prototype, \"green\", {\n        get: function () {\n            return this._green;\n        },\n        set: function (v) {\n            this._green = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClearPainter.prototype, \"blue\", {\n        get: function () {\n            return this._blue;\n        },\n        set: function (v) {\n            this._blue = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClearPainter.prototype, \"alpha\", {\n        get: function () {\n            return this._alpha;\n        },\n        set: function (v) {\n            this._alpha = v;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ClearPainter.prototype, \"color\", {\n        get: function () {\n            var color = new Color();\n            color.R = this._red;\n            color.G = this._green;\n            color.B = this._blue;\n            color.A = this._alpha;\n            return color.stringify();\n        },\n        set: function (cssColor) {\n            var color = new Color(cssColor);\n            this._red = color.R;\n            this._green = color.G;\n            this._blue = color.B;\n            this._alpha = color.A;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ClearPainter.prototype.render = function () {\n        var scene = this.scene;\n        if (!scene) {\n            return;\n        }\n        var gl = scene.gl;\n        gl.clearColor(this._red, this._green, this._blue, this._alpha);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n    };\n    ClearPainter.prototype.initialize = function () {\n        if (this.params) {\n            this.color = this.params.color || '#d72';\n        }\n    };\n    ClearPainter.prototype.destroy = function () {\n        // Nothing to destroy for this painter.\n    };\n    return ClearPainter;\n}(Painter));\nexport default ClearPainter;\n//# sourceMappingURL=clear.js.map","var VirtualSprite = /** @class */ (function () {\n    function VirtualSprite(id, data, update, destroy) {\n        this.$index = -1;\n        this.extra = {};\n        this._id = id;\n        this._data = data;\n        this._update = update;\n        this._destroy = destroy;\n    }\n    Object.defineProperty(VirtualSprite.prototype, \"id\", {\n        get: function () { return this._id; },\n        enumerable: true,\n        configurable: true\n    });\n    VirtualSprite.prototype.destroy = function () { this._destroy(this); };\n    return VirtualSprite;\n}());\nexport default VirtualSprite;\n//# sourceMappingURL=virtual-sprite.js.map","/**\n * Quads are actually any kind of quadrilaters.\n * Each corner has 5 attributes:\n * - x, y, z: space coords.\n * - u, v: atlas coords.\n *\n * They are suffixed with:\n * - TL: Top Left corner.\n * - TR: Top Right corner.\n * - BR: Bottom Right corner.\n * - BL: Bottom Left corner.\n */\nimport { __assign, __extends } from \"tslib\";\nimport VirtualSprite from \"./virtual-sprite\";\nvar Quad = /** @class */ (function (_super) {\n    __extends(Quad, _super);\n    function Quad(id, data, update, destroy, params) {\n        var _this = _super.call(this, id, data, update, destroy) || this;\n        _this._params = params;\n        return _this;\n    }\n    Quad.prototype.update = function (newParams) {\n        if (newParams) {\n            this._params = __assign(__assign({}, this._params), newParams);\n        }\n        var _a = this._params, xTL = _a.xTL, yTL = _a.yTL, zTL = _a.zTL, uTL = _a.uTL, vTL = _a.vTL, xTR = _a.xTR, yTR = _a.yTR, zTR = _a.zTR, uTR = _a.uTR, vTR = _a.vTR, xBR = _a.xBR, yBR = _a.yBR, zBR = _a.zBR, uBR = _a.uBR, vBR = _a.vBR, xBL = _a.xBL, yBL = _a.yBL, zBL = _a.zBL, uBL = _a.uBL, vBL = _a.vBL;\n        var data = this._data;\n        // tslint:disable:no-magic-numbers\n        data[0] = xTL;\n        data[1] = yTL;\n        data[2] = zTL;\n        data[3] = uTL;\n        data[4] = vTL;\n        data[5] = xTR;\n        data[6] = yTR;\n        data[7] = zTR;\n        data[8] = uTR;\n        data[9] = vTR;\n        data[10] = xBR;\n        data[11] = yBR;\n        data[12] = zBR;\n        data[13] = uBR;\n        data[14] = vBR;\n        data[15] = xBL;\n        data[16] = yBL;\n        data[17] = zBL;\n        data[18] = uBL;\n        data[19] = vBL;\n        // tslint:enable:no-magic-numbers\n        this._update(this, data);\n    };\n    return Quad;\n}(VirtualSprite));\nexport default Quad;\n//# sourceMappingURL=quad.js.map","/**\n * Sprites management is complex because we must be able to add sprites\n * even for Painters that are not yet used in a Scene.\n */\nimport { __assign, __extends } from \"tslib\";\nimport Calc from '../../calc';\nimport VirtualSprite from \"./virtual-sprite\";\nvar Sprite = /** @class */ (function (_super) {\n    __extends(Sprite, _super);\n    function Sprite(id, data, update, destroy, params) {\n        var _this = _super.call(this, id, data, update, destroy) || this;\n        _this._params = params;\n        return _this;\n    }\n    Object.defineProperty(Sprite.prototype, \"x\", {\n        get: function () {\n            return this._params.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"y\", {\n        get: function () {\n            return this._params.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"z\", {\n        get: function () {\n            return this._params.z;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"width\", {\n        get: function () {\n            return this._params.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"height\", {\n        get: function () {\n            return this._params.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"originX\", {\n        get: function () {\n            return this._params.originX;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"originY\", {\n        get: function () {\n            return this._params.originY;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"u0\", {\n        get: function () {\n            return this._params.u0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"v0\", {\n        get: function () {\n            return this._params.v0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"u1\", {\n        get: function () {\n            return this._params.u1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Sprite.prototype, \"v1\", {\n        get: function () {\n            return this._params.v1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Sprite.prototype.update = function (newParams) {\n        if (newParams) {\n            this._params = __assign(__assign({}, this._params), newParams);\n        }\n        var _a = this._params, x = _a.x, y = _a.y, z = _a.z, originX = _a.originX, originY = _a.originY, width = _a.width, height = _a.height, u0 = _a.u0, v0 = _a.v0, u1 = _a.u1, v1 = _a.v1, scale = _a.scale, angle = _a.angle;\n        var xxA = -originX;\n        var yyA = -originY;\n        var xxB = xxA + width;\n        var yyB = yyA;\n        var xxC = xxA + width;\n        var yyC = yyA + height;\n        var xxD = xxA;\n        var yyD = yyA + height;\n        var xA = xxA * scale;\n        var yA = yyA * scale;\n        var xB = xxB * scale;\n        var yB = yyB * scale;\n        var xC = xxC * scale;\n        var yC = yyC * scale;\n        var xD = xxD * scale;\n        var yD = yyD * scale;\n        // tslint:disable-next-line:no-bitwise\n        if ((angle | 0) !== 0) {\n            var C = Calc.cos(angle);\n            var S = Calc.sin(angle);\n            xA = (xxA * C + yyA * S) * scale;\n            yA = (yyA * C - xxA * S) * scale;\n            xB = (xxB * C + yyB * S) * scale;\n            yB = (yyB * C - xxB * S) * scale;\n            xC = (xxC * C + yyC * S) * scale;\n            yC = (yyC * C - xxC * S) * scale;\n            xD = (xxD * C + yyD * S) * scale;\n            yD = (yyD * C - xxD * S) * scale;\n        }\n        var data = this._data;\n        // tslint:disable:no-magic-numbers\n        data[0] = xA + x;\n        data[1] = yA + y;\n        data[2] = z;\n        data[3] = u0;\n        data[4] = v1;\n        data[5] = xB + x;\n        data[6] = yB + y;\n        data[7] = z;\n        data[8] = u1;\n        data[9] = v1;\n        data[10] = xC + x;\n        data[11] = yC + y;\n        data[12] = z;\n        data[13] = u1;\n        data[14] = v0;\n        data[15] = xD + x;\n        data[16] = yD + y;\n        data[17] = z;\n        data[18] = u0;\n        data[19] = v0;\n        // tslint:enable:no-magic-numbers\n        this._update(this, data);\n    };\n    return Sprite;\n}(VirtualSprite));\nexport default Sprite;\n//# sourceMappingURL=sprite.js.map","import { __assign, __extends, __read, __values } from \"tslib\";\nimport Painter from '../painter';\nimport Quad from './quad';\nimport Sprite from './sprite';\nimport frag from './sprites.frag';\nimport vert from './sprites.vert';\n// Allocations will be done by pieces of BLOCK Sprites.\nvar BLOCK = 64;\nvar NB_ATTRIBS = 5; // attXYZ and attUV.\nvar NB_ELEMS = 6; // Two triangles of 3 points to get a square.\nvar NB_CORNERS = 4;\nvar CHUNK = NB_ATTRIBS * NB_CORNERS;\nvar DEFAULT_WIDTH = 64;\nvar DEFAULT_HEIGHT = 64;\nvar HALF = 0.5;\nvar globalID = 1;\nvar SpritesPainter = /** @class */ (function (_super) {\n    __extends(SpritesPainter, _super);\n    function SpritesPainter(params) {\n        var _this = _super.call(this) || this;\n        _this._capacity = BLOCK;\n        _this._dataVert = new Float32Array(BLOCK * CHUNK);\n        // We need to keep track of all the inserted sprites because when we want to destroy\n        // one, we wnat to exchange its position with the one at the end of the list for\n        // optimisation purpose.\n        _this._sprites = [];\n        _this._update = function (sprite, data) {\n            if (!_this.scene) {\n                // If this painter has not yet been initialized, then update has to be defered.\n                _this._deferedSpritesUpdate.set(sprite.id, [sprite, data]);\n                return;\n            }\n            if (sprite.$index < 0) {\n                _this._allocate(sprite);\n            }\n            _this._dataVert.set(data, CHUNK * sprite.$index);\n        };\n        /**\n         * Only called by an instance os Sprite.\n         */\n        _this._destroy = function (sprite) {\n            var lastSprite = _this._sprites.pop();\n            if (!lastSprite) {\n                console.error(\"You tried to destroy a Sprite that is not owned by this painter!\", sprite);\n                return;\n            }\n            var indexOfLastSprite = lastSprite.$index;\n            if (indexOfLastSprite !== sprite.$index) {\n                // Swap positions of destroyed sprite and last sprite in the list.\n                lastSprite.$index = sprite.$index;\n                _this._sprites[lastSprite.$index] = lastSprite;\n                lastSprite.update();\n            }\n            sprite.$index = -1;\n        };\n        _this._atlas = params.atlas;\n        _this._camera = params.camera;\n        _this._deferedSpritesUpdate = new Map();\n        return _this;\n    }\n    Object.defineProperty(SpritesPainter.prototype, \"atlas\", {\n        get: function () {\n            return this._atlas;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SpritesPainter.prototype, \"count\", {\n        get: function () {\n            return this._sprites.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Register a new sprite that will be immediatly visible.\n     */\n    SpritesPainter.prototype.createSprite = function (params) {\n        var atlas = this.atlas;\n        var width = atlas.width || DEFAULT_WIDTH;\n        var height = atlas.height || DEFAULT_HEIGHT;\n        var data = new Float32Array(CHUNK);\n        var sprite = new Sprite(\"\" + globalID++, data, this._update, this._destroy, __assign({ x: 0, y: 0, z: 0, width: width, height: height, originX: width * HALF, originY: width * HALF, u0: 0, v0: 0, u1: 1, v1: 1, scale: 1, angle: 0 }, params));\n        sprite.update();\n        return sprite;\n    };\n    /**\n     * Register a new sprite that will be immediatly visible.\n     */\n    SpritesPainter.prototype.createQuad = function (params) {\n        var data = new Float32Array(CHUNK);\n        var sprite = new Quad(\"\" + globalID++, data, this._update, this._destroy, __assign({ xTL: 0, yTL: 0, zTL: 0, uTL: 0, vTL: 0, xTR: 1024, yTR: 0, zTR: 0, uTR: 1, vTR: 0, xBR: 1024, yBR: 1024, zBR: 0, uBR: 1, vBR: 1, xBL: 0, yBL: 1024, zBL: 0, uBL: 0, vBL: 1 }, params));\n        sprite.update();\n        return sprite;\n    };\n    /**\n     * Only called by an instance os Sprite.\n     */\n    SpritesPainter.prototype._allocate = function (sprite) {\n        if (this._capacity <= this.count) {\n            this._allocateNewBlock();\n        }\n        sprite.$index = this.count;\n        this._sprites.push(sprite);\n    };\n    /**\n     * When the number of sprites exceeds the current capacity, we must allocate a new BLOCK.\n     * This function cannot be called before painter initialization.\n     */\n    SpritesPainter.prototype._allocateNewBlock = function () {\n        this._capacity += BLOCK;\n        var _a = this, scene = _a.scene, _buffElem = _a._buffElem;\n        if (!scene) {\n            throw Error('No scene!');\n        }\n        if (!_buffElem) {\n            throw Error('No buffElem!');\n        }\n        var gl = scene.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _buffElem);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, createElements(this._capacity), gl.DYNAMIC_DRAW);\n        var dataVert = new Float32Array(this._capacity * CHUNK);\n        dataVert.set(this._dataVert);\n        this._dataVert = dataVert;\n    };\n    SpritesPainter.prototype.render = function (time, delta) {\n        var _a = this, scene = _a.scene, _prg = _a._prg, atlas = _a.atlas, _buffVert = _a._buffVert, _buffElem = _a._buffElem, _camera = _a._camera;\n        if (!scene || !_prg || !atlas || !_buffVert || !_buffElem) {\n            return;\n        }\n        var gl = scene.gl;\n        // Update sprites' attributes.\n        gl.bindBuffer(gl.ARRAY_BUFFER, _buffVert);\n        gl.bufferData(gl.ARRAY_BUFFER, this._dataVert, gl.DYNAMIC_DRAW);\n        gl.enable(gl.DEPTH_TEST);\n        _prg.use();\n        _camera.setUniformValues(_prg, scene.width, scene.height, time, delta);\n        atlas.activate();\n        var uniforms = _prg;\n        uniforms.$uniTexture = 0;\n        _prg.bindAttribs(_buffVert, 'attXYZ', 'attUV');\n        gl.bindBuffer(gl.ARRAY_BUFFER, _buffVert);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, _buffElem);\n        gl.drawElements(gl.TRIANGLES, NB_ELEMS * this.count, gl.UNSIGNED_SHORT, 0);\n    };\n    SpritesPainter.prototype.initialize = function (scene) {\n        this._prg = this.createProgram({ vert: vert, frag: frag }, this._camera.getShaderIncludes());\n        var gl = scene.gl;\n        var buffVert = gl.createBuffer();\n        if (!buffVert) {\n            throw this.fatal('Not enough memory to create an array buffer!');\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffVert);\n        gl.bufferData(gl.ARRAY_BUFFER, this._dataVert, gl.DYNAMIC_DRAW);\n        this._buffVert = buffVert;\n        var buffElem = gl.createBuffer();\n        if (!buffElem) {\n            throw this.fatal('Not enough memory to create an array buffer!');\n        }\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffElem);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, createElements(BLOCK), gl.DYNAMIC_DRAW);\n        this._buffElem = buffElem;\n        this.manageDeferedSpritesUpdates();\n    };\n    SpritesPainter.prototype.destroy = function () {\n        var _a = this, scene = _a.scene, _buffVert = _a._buffVert, _buffElem = _a._buffElem;\n        if (!scene || !_buffVert || !_buffElem) {\n            return;\n        }\n        var gl = scene.gl;\n        gl.deleteBuffer(_buffVert);\n        gl.deleteBuffer(_buffElem);\n    };\n    SpritesPainter.prototype.manageDeferedSpritesUpdates = function () {\n        var e_1, _a;\n        if (this._deferedSpritesUpdate.size === 0) {\n            // Nothing to do.\n            return;\n        }\n        try {\n            for (var _b = __values(this._deferedSpritesUpdate.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item = _c.value;\n                var _d = __read(item, 2), sprite = _d[0], data = _d[1];\n                this._update(sprite, data);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    return SpritesPainter;\n}(Painter));\nexport default SpritesPainter;\nvar CORNER_B = 1;\nvar CORNER_C = 2;\nvar CORNER_D = 3;\n/**\n * A--B\n * |  |\n * D--C\n */\nfunction createElements(capacity) {\n    var dataElem = new Uint16Array(NB_ELEMS * capacity);\n    var i = 0;\n    var a = 0;\n    for (var k = 0; k < capacity; k++) {\n        var b = a + CORNER_B;\n        var c = a + CORNER_C;\n        var d = a + CORNER_D;\n        // tslint:disable:no-magic-numbers\n        dataElem[i + 0] = a;\n        dataElem[i + 1] = d;\n        dataElem[i + 2] = b;\n        dataElem[i + 3] = b;\n        dataElem[i + 4] = d;\n        dataElem[i + 5] = c;\n        // tslint:enable:no-magic-numbers\n        a += NB_CORNERS;\n        i += NB_ELEMS;\n    }\n    return dataElem;\n}\n//# sourceMappingURL=sprites.js.map","export default \"attribute vec3 attXYZ;\\nattribute vec2 attUV;\\n\\nvarying vec2 varUV;\\n\\n#include cameraUniforms\\n#include cameraFunction\\n\\nvoid main() {\\n  varUV = attUV;\\n  gl_Position = worldPointToScreen(attXYZ);\\n}\\n\"","export default \"precision mediump float;\\nuniform sampler2D uniTexture;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  vec4 color = texture2D( uniTexture, varUV );\\n  if (color.a < 1.0) discard;\\n  gl_FragColor = color;\\n}\\n\"","import { __assign, __extends } from \"tslib\";\nimport Painter from '../painter';\nimport Vert from './voronoi.vert';\nimport Frag from './voronoi.frag';\nvar NB_VERTICES_IN_SQUARE = 4;\nvar VoronoiPainter = /** @class */ (function (_super) {\n    __extends(VoronoiPainter, _super);\n    /**\n     * params: { atlas, align }\n     * - align: if undefined, the voronoi will be centered.\n     *          \"R\" means that the Right edge of the voronoi is always visible.\n     *          \"L\" means the same for Left.\n     *          \"T\" for Top.\n     *          \"B\" for \"Bottom\".\n     */\n    function VoronoiPainter(params) {\n        var _this = _super.call(this) || this;\n        _this.params = __assign({ seeds: randomArray(20), colors: randomArray(20), border: 0, light: 0, scaleX: 1, scaleY: 1 }, params);\n        if (_this.params.seeds.length % 3 !== 0) {\n            throw Error(\"The length of \\\"seeds\\\" must be an integral multiple of 3!\");\n        }\n        if (_this.params.seeds.length !== _this.params.colors.length) {\n            throw Error(\"\\\"seeds\\\" and \\\"colors\\\" must have the same length!\");\n        }\n        _this.seeds = new Float32Array(_this.params.seeds);\n        _this.colors = new Float32Array(_this.params.colors);\n        return _this;\n    }\n    VoronoiPainter.prototype.render = function () {\n        var _a = this, scene = _a.scene, prg = _a.prg, buff = _a.buff;\n        if (!scene || !prg || !buff) {\n            return;\n        }\n        var _b = this.params, border = _b.border, scaleX = _b.scaleX, scaleY = _b.scaleY;\n        var thickness = border;\n        var gl = scene.gl;\n        gl.enable(gl.DEPTH_TEST);\n        prg.use();\n        prg.setUniform(\"uniSeeds\", this.seeds);\n        prg.setUniform(\"uniColors\", this.colors);\n        prg.setUniform(\"uniLight\", this.params.light);\n        prg.setUniform(\"uniThickness\", thickness);\n        prg.setUniform(\"uniScaleX\", scaleX);\n        prg.setUniform(\"uniScaleY\", scaleY);\n        prg.bindAttribs(buff, 'attXY');\n        gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n        gl.drawArrays(gl.TRIANGLE_STRIP, 0, NB_VERTICES_IN_SQUARE);\n    };\n    /*\n        private getSeeds(time: number) {\n            const { lastTime } = this;\n            let alpha = (time - lastTime) / DURATION\n            if (alpha > 3) {\n                this.lastTime = time\n                this.seeds0 = this.seeds1\n                this.seeds1 = randomArray()\n                alpha = 0\n            }\n            alpha = Math.min(alpha, 1)\n    \n            const mix = []\n            const { seeds0, seeds1 } = this\n            const beta = 1 - alpha\n            for (let i = 0; i < seeds1.length; i++) {\n                mix.push(beta * seeds0[i] + alpha * seeds1[i])\n            }\n            return new Float32Array(mix)\n        }\n    */\n    VoronoiPainter.prototype.destroy = function (scene) {\n        var gl = scene.gl;\n        var buff = this.buff;\n        if (!buff) {\n            return;\n        }\n        gl.deleteBuffer(buff);\n    };\n    VoronoiPainter.prototype.initialize = function (scene) {\n        this.prg = this.createProgram({\n            frag: Frag,\n            vert: Vert,\n        }, {\n            count: \"const int COUNT = \" + this.params.seeds.length + \";\"\n        });\n        var gl = scene.gl;\n        var buff = gl.createBuffer();\n        if (!buff) {\n            throw this.fatal('Not enough memory to create an array buffer!');\n        }\n        gl.bindBuffer(gl.ARRAY_BUFFER, buff);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]), gl.STATIC_DRAW);\n        this.buff = buff;\n    };\n    return VoronoiPainter;\n}(Painter));\nexport default VoronoiPainter;\nfunction randomArray(count) {\n    var arr = [];\n    for (var i = 0; i < 3 * count; i++) {\n        arr.push(Math.random());\n    }\n    return arr;\n}\n//# sourceMappingURL=voronoi.js.map","import BackgroundPainter from './background';\nimport ClearPainter from './clear';\nimport Painter from './painter';\nimport SpritesPainter from './sprites';\nimport VoronoiPainter from './voronoi';\nexport default {\n    Background: BackgroundPainter,\n    Clear: ClearPainter,\n    Painter: Painter,\n    Sprites: SpritesPainter,\n    Voronoi: VoronoiPainter\n};\n//# sourceMappingURL=index.js.map","export default \"precision mediump float;\\n\\n#include \\\"count\\\"\\n\\nconst vec3 WHITE = vec3(1,1,1);\\nconst vec3 BLACK = vec3(0,0,0);\\n\\nuniform float uniSeeds[COUNT];\\nuniform float uniColors[COUNT];\\nuniform float uniLight;\\nuniform float uniThickness;\\n\\n/**\\n * The coords of a and b must be in the range [0;1].\\n */\\nfloat distSquared(vec2 a, vec2 b) {\\n  float x = abs(a.x - b.x);\\n  if (x > .5) x = 1.0 - x;\\n  float y = abs(a.y - b.y);\\n  if (y > .5) y = 1.0 - y;\\n\\n  return x*x + y*y;\\n}\\n\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  vec2 M = vec2(fract(varUV.x), fract(varUV.y));\\n\\n  float distA = distSquared(M, vec2(uniSeeds[0], uniSeeds[1])) * uniSeeds[2];\\n  vec3 seedA = vec3(uniSeeds[0], uniSeeds[1], uniSeeds[2]);\\n  vec3 colorA = vec3(uniColors[0], uniColors[1], uniColors[2]);\\n  float distB = distSquared(M, vec2(uniSeeds[3], uniSeeds[4])) * uniSeeds[5];\\n  vec3 seedB = vec3(uniSeeds[3], uniSeeds[4], uniSeeds[5]);\\n  vec3 colorB = vec3(uniColors[3], uniColors[4], uniColors[5]);\\n\\n  if (distB < distA) {\\n    float swaperDist = distA;\\n    distA = distB;\\n    distB = swaperDist;\\n    vec3 swaperSeed = seedA;\\n    seedA = seedB;\\n    seedB = swaperSeed;\\n    vec3 swaperColor = colorA;\\n    colorA = colorB;\\n    colorB = swaperColor;\\n  }\\n\\n  float dist;\\n  vec3 seed;\\n  vec3 color;\\n\\n  for (int i = 6; i < COUNT; i+=3) {\\n    seed = vec3(uniSeeds[i], uniSeeds[i+1], uniSeeds[i+2]);\\n    color = vec3(uniColors[i], uniColors[i+1], uniColors[i+2]);\\n    dist = distSquared(M, seed.xy) * seed.z;\\n    if (dist < distA) {\\n      distB = distA;\\n      seedB = seedA;\\n      colorB = colorA;\\n      distA = dist;\\n      seedA = seed;\\n      colorA = color;\\n    }\\n    else if (dist < distB) {\\n      distB = dist;\\n      seedB = seed;\\n      colorB = color;\\n    }\\n  }\\n\\n/*\\n  vec2 AM = M.xy - seedA.xy;\\n  vec2 AB = seedB.xy - seedA.xy;\\n  vec2 AB1 = normalize(AB);\\n  float semiLengthAB = length(AB) * 0.5;\\n  float distanceFromBorder = semiLengthAB - dot(AM, AB1);\\n*/\\n\\n  float dA = distA;\\n  float dB = distB;\\n  float distanceFromBorder = dB - dA;\\n  float alpha;\\n  vec3 color0;\\n  vec3 color1;\\n\\n  if (distanceFromBorder < uniThickness) {\\n      // Border.\\n      color0 = BLACK;\\n      color1 = colorA;\\n      alpha = smoothstep(0.0, uniThickness, distanceFromBorder);\\n  } else {\\n      // Cell.\\n      color0 = colorA;\\n      color1 = mix(colorA, WHITE, uniLight);\\n      alpha = (distanceFromBorder - uniThickness) / (dB - uniThickness);\\n  }\\n\\n  gl_FragColor = vec4(mix(color0, color1, alpha), 1);\\n}\\n\"","export default \"uniform float uniScaleX;\\nuniform float uniScaleY;\\n\\nattribute vec2 attXY;\\nvarying vec2 varUV;\\n\\nvoid main() {\\n  varUV = vec2(attXY.x * uniScaleX, attXY.y * uniScaleY);\\n  float x = (attXY.x * 2.0) - 1.0;\\n  float y = 1.0 - (attXY.y * 2.0);\\n  gl_Position = vec4(x, y, 0.0, 1.0);\\n}\\n\"","import { __awaiter, __generator } from \"tslib\";\nvar Atlas = /** @class */ (function () {\n    function Atlas(gl, _name) {\n        this.gl = gl;\n        this._name = _name;\n        this._ready = false;\n        this._width = 0;\n        this._height = 0;\n        var texture = gl.createTexture();\n        if (!texture) {\n            throw new Error('Unable to create a new texture!');\n        }\n        this.texture = texture;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    }\n    Object.defineProperty(Atlas.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Atlas.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Atlas.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Atlas.prototype, \"ready\", {\n        /**\n         * Return `true` as soon as an image has been loaded into the graphic card.\n         */\n        get: function () {\n            return this._ready;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Remove the texture from the graphic card memory.\n     */\n    Atlas.prototype.destroy = function () {\n        this._ready = false;\n        var _a = this, gl = _a.gl, texture = _a.texture;\n        gl.deleteTexture(texture);\n    };\n    Atlas.prototype.activate = function (unit) {\n        if (unit === void 0) { unit = 0; }\n        var _a = this, gl = _a.gl, texture = _a.texture;\n        var UNITS = [\n            gl.TEXTURE0,\n            gl.TEXTURE1,\n            gl.TEXTURE2,\n            gl.TEXTURE3,\n            gl.TEXTURE4,\n            gl.TEXTURE5,\n            gl.TEXTURE6,\n            gl.TEXTURE7,\n        ];\n        gl.activeTexture(UNITS[Math.abs(unit) % UNITS.length]);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n    };\n    /**\n     * If you use canvas and you want to repaint this canvas, the atlas won't change.\n     * To force it to change, you have to call refresh().\n     */\n    Atlas.prototype.refresh = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._params)\n                            return [2 /*return*/];\n                        return [4 /*yield*/, this.load(this._params)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * This function must not be called directly.\n     * It is used internally by painters.\n     */\n    Atlas.prototype.load = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this._ready = false;\n                this._params = params;\n                if (params.image) {\n                    return [2 /*return*/, this.loadImage(params.image)];\n                }\n                else if (params.canvas) {\n                    return [2 /*return*/, this.loadCanvas(params.canvas)];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    Atlas.prototype.loadImage = function (url) {\n        return __awaiter(this, void 0, void 0, function () {\n            var that;\n            return __generator(this, function (_a) {\n                that = this;\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var img = new Image();\n                        that._ready = false;\n                        img.onload = function () {\n                            var gl = that.gl, texture = that.texture;\n                            gl.bindTexture(gl.TEXTURE_2D, texture);\n                            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img);\n                            that._ready = true;\n                            that._width = img.width;\n                            that._height = img.height;\n                            resolve();\n                        };\n                        img.onerror = function () {\n                            console.error(\"Unable to load image \\\"\" + name + \"\\\": \", url);\n                            reject();\n                        };\n                        img.src = url;\n                    })];\n            });\n        });\n    };\n    Atlas.prototype.loadCanvas = function (canvas) {\n        var _a = this, gl = _a.gl, texture = _a.texture;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, canvas);\n        this._ready = true;\n        this._width = canvas.width;\n        this._height = canvas.height;\n    };\n    return Atlas;\n}());\nexport default Atlas;\n//# sourceMappingURL=atlas.js.map","var VIRTUAL_SCREEN_RESOLUTION = 1024;\nvar HALF = 0.5;\nvar Pointer = /** @class */ (function () {\n    /** @hidden */\n    function Pointer(canvas) {\n        var _this = this;\n        this._x = 0;\n        this._y = 0;\n        this._down = false;\n        // If 0, pointer is up.\n        this._downTime = 0;\n        this._eventDown = false;\n        this._eventUp = false;\n        this.onMouseMove = function (evt) {\n            _this.computeCoords(evt.clientX, evt.clientY);\n        };\n        this.onTouchMove = function (te) {\n            var evt = te.touches[0];\n            _this.computeCoords(evt.clientX, evt.clientY);\n        };\n        this.onMouseDown = function (evt) {\n            _this.onDown(evt.clientX, evt.clientY);\n        };\n        this.onTouchStart = function (te) {\n            var evt = te.touches[0];\n            _this.onDown(evt.clientX, evt.clientY);\n        };\n        this.onMouseUp = function (evt) {\n            _this.onUp(evt.clientX, evt.clientY);\n        };\n        this.onTouchEnd = function (te) {\n            var evt = te.touches[0];\n            _this.onUp(evt.clientX, evt.clientY);\n        };\n        this.canvas = canvas;\n        window.addEventListener('mousemove', this.onMouseMove, true);\n        window.addEventListener('touchmove', this.onTouchMove, true);\n        window.addEventListener('mousedown', this.onMouseDown, true);\n        window.addEventListener('touchstart', this.onTouchStart, true);\n        window.addEventListener('mouseup', this.onMouseUp, true);\n        window.addEventListener('touchend', this.onTouchEnd, true);\n    }\n    /** @hidden */\n    Pointer.prototype.reset = function () {\n        this._eventDown = false;\n        this._eventUp = false;\n    };\n    Object.defineProperty(Pointer.prototype, \"x\", {\n        get: function () {\n            return this._x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pointer.prototype, \"y\", {\n        get: function () {\n            return this._y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pointer.prototype, \"down\", {\n        /** Test if the pointer is touching the screen. */\n        get: function () {\n            return this._down;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pointer.prototype, \"eventUp\", {\n        /** `true` only if the pointer started touching the screen this very last frame. */\n        get: function () {\n            return this._eventUp;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Pointer.prototype, \"eventDown\", {\n        /** `true` only if the pointer stopped touching the screen this very last frame. */\n        get: function () {\n            return this._eventDown;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Pointer.prototype.onDown = function (x, y) {\n        if (this._downTime !== 0) {\n            return;\n        }\n        this.computeCoords(x, y);\n        this._down = true;\n        this._eventDown = true;\n        this._downTime = Date.now();\n    };\n    Pointer.prototype.onUp = function (x, y) {\n        if (this._downTime === 0) {\n            return;\n        }\n        this.computeCoords(x, y);\n        this._down = false;\n        this._eventUp = true;\n        this._downTime = 0;\n    };\n    Pointer.prototype.computeCoords = function (pointerX, pointerY) {\n        var canvas = this.canvas;\n        var rect = canvas.getBoundingClientRect();\n        var x = pointerX - rect.left;\n        var y = pointerY - rect.top;\n        var w = rect.width;\n        var h = rect.height;\n        if (w > h) {\n            this._x = (VIRTUAL_SCREEN_RESOLUTION * x) / w;\n            this._y = VIRTUAL_SCREEN_RESOLUTION * (HALF * (1 - h / w) + y / w);\n        }\n        else {\n            this._x = VIRTUAL_SCREEN_RESOLUTION * (HALF * (1 - w / h) + x / h);\n            this._y = (VIRTUAL_SCREEN_RESOLUTION * y) / h;\n        }\n    };\n    return Pointer;\n}());\nexport default Pointer;\n//# sourceMappingURL=pointer.js.map","import { __values } from \"tslib\";\nimport Atlas from './atlas';\nimport Pointer from './pointer';\nimport Resize from './webgl/resize';\nvar ID = 1;\nvar Scene = /** @class */ (function () {\n    function Scene(canvas) {\n        var _this = this;\n        this.resolution = 1;\n        this.onAnimation = null;\n        this.activePainters = [];\n        this.isRendering = false;\n        this.lastRenderingTime = 0;\n        this.render = function (time) {\n            var e_1, _a;\n            if (_this.isRendering) {\n                window.requestAnimationFrame(_this.render);\n            }\n            else {\n                return;\n            }\n            var _b = _this, gl = _b.gl, lastRenderingTime = _b.lastRenderingTime;\n            Resize(gl, _this.resolution);\n            _this.lastRenderingTime = time;\n            var delta = time - lastRenderingTime;\n            gl.clearDepth(+1);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n            gl.depthFunc(gl.LESS);\n            try {\n                try {\n                    for (var _c = __values(_this.activePainters), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var painter = _d.value;\n                        painter.render(time, delta);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                var onAnimation = _this.onAnimation;\n                if (typeof onAnimation === 'function') {\n                    onAnimation(time);\n                    _this.pointer.reset();\n                }\n            }\n            catch (ex) {\n                console.error(ex);\n                _this.stop();\n                console.error('###############################');\n                console.error('# Rendering has been stopped! #');\n                console.error('###############################');\n            }\n        };\n        this._pointer = new Pointer(canvas);\n        var gl = canvas.getContext('webgl', {\n        // Specify WebGL options.\n        });\n        if (!gl) {\n            throw new Error('Unable to create a WegGL context!');\n        }\n        this._gl = gl;\n        this.atlases = new Map();\n    }\n    Object.defineProperty(Scene.prototype, \"gl\", {\n        get: function () {\n            return this._gl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"pointer\", {\n        /**\n         * Retreive information about pointer (mouse, pen, finger, ...) state.\n         */\n        get: function () {\n            return this._pointer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"width\", {\n        /**\n         * Visible width. Between 0 and 1024.\n         */\n        get: function () {\n            return this.gl.drawingBufferWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"height\", {\n        /**\n         * Visible height. Between 0 and 1024.\n         */\n        get: function () {\n            return this.gl.drawingBufferHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Define which painter to use and in what order.\n     * For better performance, prefer putting background painters at the end of the list.\n     */\n    Scene.prototype.use = function (painters) {\n        var e_2, _a;\n        try {\n            for (var painters_1 = __values(painters), painters_1_1 = painters_1.next(); !painters_1_1.done; painters_1_1 = painters_1.next()) {\n                var painter = painters_1_1.value;\n                painter.scene = this;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (painters_1_1 && !painters_1_1.done && (_a = painters_1.return)) _a.call(painters_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        this.activePainters = painters.slice();\n    };\n    Scene.prototype.getAtlas = function (name) {\n        var atlases = this.atlases;\n        return atlases.get(name) || null;\n    };\n    /**\n     * Create an atlas that can be used immediatly even if the needed assets are not yet loaded.\n     * @param  params\n     * @param  onLoad You can provide a callback function that will be called when the assets\n     * are loaded.\n     */\n    Scene.prototype.createAtlas = function (params, onLoad) {\n        var name = params.name;\n        var sanitizedName = name || this.getNewName();\n        var atlas = new Atlas(this.gl, sanitizedName);\n        this.atlases.set(sanitizedName, atlas);\n        // tslint:disable:no-floating-promises\n        atlas.load(params).then(function () {\n            if (typeof onLoad === 'function') {\n                onLoad(params);\n            }\n        });\n        return atlas;\n    };\n    /**\n     * Create an atlas that can be used immediatly even if the needed assets are not yet loaded.\n     * @param  params\n     * @param  onLoad You can provide a callback function that will be called when the assets\n     * are loaded.\n     */\n    Scene.prototype.createAtlasAsync = function (params) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var name = params.name;\n            var sanitizedName = name || _this.getNewName();\n            var atlas = new Atlas(_this.gl, sanitizedName);\n            _this.atlases.set(sanitizedName, atlas);\n            // tslint:disable:no-floating-promises\n            atlas.load(params).then(function () { return resolve(atlas); });\n        });\n    };\n    Scene.prototype.createAtlasesAsync = function (params) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var e_3, _a;\n            var atlasNames = Object.keys(params);\n            var promises = [];\n            try {\n                for (var atlasNames_1 = __values(atlasNames), atlasNames_1_1 = atlasNames_1.next(); !atlasNames_1_1.done; atlasNames_1_1 = atlasNames_1.next()) {\n                    var atlasName = atlasNames_1_1.value;\n                    var atlasParam = params[atlasName];\n                    promises.push(_this.createAtlasAsync(atlasParam));\n                }\n            }\n            catch (e_3_1) { e_3 = { error: e_3_1 }; }\n            finally {\n                try {\n                    if (atlasNames_1_1 && !atlasNames_1_1.done && (_a = atlasNames_1.return)) _a.call(atlasNames_1);\n                }\n                finally { if (e_3) throw e_3.error; }\n            }\n            Promise.all(promises).then(function (atlases) {\n                var result = {};\n                for (var i = 0; i < atlases.length; i++) {\n                    var name_1 = atlasNames[i];\n                    var atlas = atlases[i];\n                    result[name_1] = atlas;\n                }\n                resolve(result);\n            });\n        });\n    };\n    Scene.prototype.destroyAtlas = function (name) {\n        var atlases = this.atlases;\n        var atlas = atlases.get(name);\n        if (!atlas) {\n            return false;\n        }\n        atlases.delete(name);\n        atlas.destroy();\n        return true;\n    };\n    /**\n     * Start rendering.\n     * When a frame is rendered, the function `onAnimation( time: number )` is called.\n     */\n    Scene.prototype.start = function () {\n        if (this.isRendering) {\n            return;\n        }\n        this.isRendering = true;\n        window.requestAnimationFrame(this.render);\n    };\n    /**\n     * Stop rendering.\n     */\n    Scene.prototype.stop = function () {\n        this.isRendering = false;\n    };\n    Scene.prototype.getNewName = function () {\n        while (true) {\n            var name_2 = \"atlas-\" + ID++;\n            if (!this.atlases.has(name_2)) {\n                return name_2;\n            }\n        }\n    };\n    return Scene;\n}());\nexport default Scene;\n//# sourceMappingURL=scene.js.map","/**\n * Resolution in CSS pixels. If omitted, the real resolution\n * of the device is taken. On smartphones, for instance,\n * the resolution is often greater than 1.\n *\n * Return `true` if the size has changed.\n */\nexport default (function (gl, _resolution) {\n    if (_resolution === void 0) { _resolution = 0; }\n    var resolution = _resolution <= 0 ? window.devicePixelRatio : _resolution;\n    var canvas = gl.canvas;\n    if (canvas instanceof HTMLCanvasElement) {\n        var displayWidth = Math.floor(canvas.clientWidth * resolution);\n        var displayHeight = Math.floor(canvas.clientHeight * resolution);\n        // Check if the canvas is not the same size.\n        if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n            // Make the canvas the same size\n            canvas.width = displayWidth;\n            canvas.height = displayHeight;\n            gl.viewport(0, 0, displayWidth, displayHeight);\n            return true;\n        }\n    }\n    return false;\n});\n//# sourceMappingURL=resize.js.map","import { __extends } from \"tslib\";\nimport Calc from './calc';\nimport Camera from './camera';\nimport Painter from './painter';\nimport Scene from './scene';\nvar IScene = /** @class */ (function (_super) {\n    __extends(IScene, _super);\n    function IScene() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IScene;\n}(Scene));\nexport { IScene };\nexport default {\n    Calc: Calc,\n    Camera: Camera,\n    Painter: Painter,\n    Scene: Scene\n};\n//# sourceMappingURL=index.js.map","export default { rnd, rndVector2D }\n\n/**\n * @return random integer greater or equal to `min` and strictly lower than `max`.\n * If `max` is undefined, the range is considered to be [0, min].\n */\nfunction rnd(min: number, max?: number): number {\n    if (typeof max === 'undefined') {\n        max = min\n        min = 0\n    }\n\n    return Math.floor(min + (max - min) * Math.random())\n}\n\n\nfunction rndVector2D(): [number, number] {\n    const angle = 2 * Math.PI * Math.random()\n    return [Math.cos(angle), Math.sin(angle)]\n}\n","import { IDataLevel, ISpritesPainter } from '../types'\nimport Util from '../util'\n\nconst ROMBUS_WIDTH = 64\nconst ROMBUS_HEIGHT = 21\n\n/**\n * In a level like the following, the top left corner is at R=o (row) and C=0 (col).\n * The X is at R=3 and C=9.\n *\n * ##########\n * #      | #\n * # #### + #\n * #k     | X\n * ######-+-#\n *\n *\n */\nexport default class Level {\n    readonly rows: number\n    readonly cols: number\n\n    constructor(private dataLevel: IDataLevel, private painter: ISpritesPainter) {\n        const data = dataLevel.data\n        this.rows = data.length\n        this.cols = data.reduce(\n            (prv: string, cur: string) => cur.length > prv.length ? cur : prv,\n            \"\"\n        ).length\n        this.createFixedSprites()\n    }\n\n    get name() { return this.dataLevel.name }\n\n    public getIsometricCoords(row: number, col: number) {\n        const x = (col - row) * ROMBUS_WIDTH\n        const y = (col + row) * ROMBUS_HEIGHT\n        const z = (col + row) / 1024\n        return { x, y, z }\n    }\n\n    /**\n     * All the sprites for elements of the level that don't move.\n     * For instance walls and center of doors.\n     */\n    private createFixedSprites() {\n        this.forEachCell((row: number, col: number, type: string) => {\n            switch(type) {\n                case WALL: return this.addWallSprite(row, col)\n            }\n        })\n    }\n\n    /**\n     * Create a sprite for a wall and add it to the painter.\n     */\n    private addWallSprite(row: number, col: number) {\n        const { painter } = this\n        // Walls are the most displayed cells.\n        // We want to add diversity.\n        // That's why we have 8 models of walls.\n        const model = Util.rnd(8) / 8\n        const sprite = {\n            ...this.getIsometricCoords(row, col),\n            width: 128,\n            height: 128,\n            originX: 64,\n            originY: 64 + 32,\n            u0: model,\n            u1: model + 1/8,\n            v0: 0,\n            v1: 1/8,\n            angle: 0,\n            scale: 1\n        }\n        painter.createSprite(sprite)\n    }\n\n    /**\n     * For each cell of this level, call function action(row, col, type).\n     */\n    private forEachCell(action: ICellAction) {\n        const { data } = this.dataLevel\n        for (let row = 0 ; row < data.length ; row++) {\n            const line = data[row]\n            for (let col = 0 ; col < line.length ; col++) {\n                action(row, col, line.charAt(col))\n            }\n        }\n    }\n}\n\n\nconst WALL = '#'\nconst TURN = 'O'\nconst TURN_KEY = '+'\n\ntype ICellAction = (row: number, col: number, type: string) => void\n\ninterface ISprite {\n  x: number\n  y: number\n  z: number\n  width: number\n  height: number\n  originX: number\n  originY: number\n  u0: number\n  v0: number\n  u1: number\n  v1: number\n  scale: number\n  angle: number\n}\n","import Introduction from './introduction'\n\nexport default {\n    Introduction\n}\n","import { IDataLevel } from '../../types'\n\nconst level: IDataLevel = {\n    name: \"Gentle Introduction\",\n    data: [\n        \"####################\",\n        \"#                | #\",\n        \"# ############## + #\",\n        \"#k               | X\",\n        \"######-+-###########\",\n        \"# | #         #k   #\",\n        \"# O #####-O-# #### #\",\n        \"#1|         #      #\",\n        \"####################\"\n    ]\n}\n\nexport default level\n","import React from \"react\"\nimport FlatLand from 'flat-land-gl'\nimport Level from '../logic/level'\nimport Levels from '../data/level'\nimport Util from '../util'\n\nimport LevelAtlas from '../gfx/atlas-level.png'\nimport \"./App.css\"\n\ninterface IAppProps {\n    className?: string[]\n}\ninterface IAppState {}\n\nexport default class App extends React.Component<IAppProps, IAppState> {\n    private refCanvas1 = React.createRef<HTMLCanvasElement>()\n    state = {}\n\n    async componentDidMount() {\n        const canvas = this.refCanvas1.current\n        if (!canvas) return\n\n        const scene = new FlatLand.Scene(canvas)\n        const atlas = await scene.createAtlasAsync({\n            image: LevelAtlas\n        })\n        console.log(\"LevelAtlas:\", LevelAtlas)\n        const camera = new FlatLand.Camera.Cover2D({ size: 1024 })\n        console.log(\"camera:\", camera)\n        const painter = new FlatLand.Painter.Sprites({ atlas, camera })\n        const level = new Level(Levels.Introduction, painter)\n        let col = Util.rnd(level.cols)\n        let row = Util.rnd(level.rows)\n        let [colV, rowV] = Util.rndVector2D()\n        const speed = 0.05\n        scene.onAnimation = (time: number) => {\n            const coords = level.getIsometricCoords(row, col)\n            camera.x = coords.x\n            camera.y = coords.y\n\n            row += rowV * speed\n            col += colV * speed\n            if (row < 0) {\n                rowV = -rowV\n                row = 0\n            }\n            else if (row > level.rows - 1) {\n                rowV = -rowV\n                row = level.rows - 1\n            }\n            if (col < 0) {\n                colV = -colV\n                col = 0\n            }\n            else if (col > level.cols - 1) {\n                colV = -colV\n                col = level.cols - 1\n            }\n        }\n        scene.use([painter])\n        scene.start()\n    }\n\n    render() {\n        return (<div className='App'>\n            <canvas ref={this.refCanvas1}></canvas>\n        </div>)\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/atlas-level.d636a889.png\";"],"sourceRoot":""}